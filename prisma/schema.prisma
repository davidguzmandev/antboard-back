// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Enum para los roles
enum Role {
  SHIPPER
  CARRIER
  ADMIN
  BROKER
}

model User {
  id          String    @id @default(uuid())
  role        Role
  roleStatus  String    @default("PENDING") // APPROVED, REJECTED, PENDING
  name        String
  subname     String
  email       String    @unique // El email debe ser único
  password    String    // Almacenará el hash de la contraseña
  companyName String?   // `?` indica que el campo es opcional/nullable
  phone       String?
  createdAt   DateTime  @default(now()) // Prisma gestiona los timestamps automáticos
  updatedAt   DateTime  @updatedAt
  isActive    Boolean   @default(false)

  // Relacion uno a muchos con Load
  loads       Load[]    // Loads creadas por el usuario como Shipper o BROKER


}

model Load {
  id              String    @id @default(uuid())
  origin          String
  destination     String
  pickupEarliest  DateTime
  pickupLatest    DateTime?
  pickupHours     String?
  dropOffHours    String?
  equipmentType   String
  equipmentLength Float
  equipmentWeight Float
  isFullLoad      Boolean   //true = Full, false = Partial
  comments        String?
  commodity       String?
  referenceId     String?
  contactPhone1   String?   //Telefono principal
  contactPhone2   String?   //Telefono alternativo
  contactEmail    String?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  // Asociacion con el usuario que creo el load
  postedBy        User      @relation(fields: [userId], references: [id])
  userId          String
}